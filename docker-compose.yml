version: '2.1'
services:

  traefik:
    build:
      context: traefik
      dockerfile: Dockerfile
    volumes:
      - certs:/var/certs
    ports:
      - 80:80/tcp
      - 443:443/tcp
      - 8081:8080/tcp
    labels:
      - io.balena.features.balena-socket=true


  doorcontrol:
    build:
      context: app/web
      dockerfile: Dockerfile.doorcontrol
    expose:
      - 3000
    environment:
      DOORMANAGER_HOST: doormanager
      PORT: 3000
    command: npm start
    depends_on: 
      - doormanager

  
  doormonitor:
    build:
      context: app/web
      dockerfile: Dockerfile.doormonitor
    expose:
      - 3000
    environment:
      DOORMANAGER_HOST: doormanager
      PORT: 3000
    command: npm start
    depends_on: 
      - doormanager

  doormanager:
    privileged: true
    build:
      context: app/doormanager
      dockerfile: Dockerfile
      args:
        VIRTUAL_ENV: /opt/venv
    expose:
      - 5555
    ports:
      - 1883:1883
    depends_on: 
      - lock_db
      - traefik
    command: gunicorn main:app -b 0.0.0.0:5555 -k uvicorn.workers.UvicornWorker
    
    
  unifi-controller:
    build:
      context: unifi
      dockerfile: Dockerfile
    environment:
      PUID: 1000
      PGID: 1000
      # - MEM_LIMIT=1024M #optional
    volumes:
      - unifi-config:/config
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 1900:1900/udp #optional
      - 8080:8080
      - 8843:8843 #optional
      - 8443:8443 #optional
      - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514/udp #optional


  lock_db:
    build:
      context: db
      dockerfile: Dockerfile
    volumes:
      - 'app-db-data:/var/lib/postgresql/data/pgdata'
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata




volumes:
  certs:
  unifi-config: 
  app-db-data:

